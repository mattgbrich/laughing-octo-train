{"version":3,"file":"index.js","sources":["../FormFields/MultipleChoice/utils.js","../FormFields/styles.js","../FormFields/MultipleChoice/index.js","../FormFields/ParagraphField.js","../FormFields/Checkbox.js","../FormFields/Dropdown.js","../FormFields/TextField.js","../FormFields/TitleDescription.js","../FormFields/FormField.js"],"sourcesContent":["export const alignmentIsRow = (alignment, displayOptions, component) => {\n    const { alignments } = displayOptions[component];\n    const alObj = alignments.reduce((acc, val) => {\n        acc[val.value] = val.value;\n        return acc;\n    }, {});\n    return alignment === alObj.horizontal;\n};\n\n","export const textStyles = theme => ({\n    sm: {\n        cursor: 'pointer',\n        fontSize: theme.typography.pxToRem(16)\n    },\n    md: {\n        cursor: 'pointer',\n        fontSize: theme.typography.pxToRem(20)\n    },\n    lg: {\n        cursor: 'pointer',\n        fontSize: theme.typography.pxToRem(24)\n    },\n    smMargin: {\n        marginTop: '16px'\n    },\n    mdMargin: {\n        marginTop: '20px'\n    },\n    lgMargin: {\n        marginTop: '24px'\n    },\n    overrideDisable: {\n        color: `${theme.palette.text.secondary} !important`\n    },\n    solidUnderline: {\n        '&:before': {\n            borderBottomStyle: 'solid !important'\n        }\n    }\n});\n\nexport const gridStyles = (theme) => ({\n    gridContainer: {\n        padding: [[theme.spacing.unit * 1.875, theme.spacing.unit * 3.75]],\n        wordBreak: 'break-word'\n    }\n});\n","import React, { useState } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport { alignmentIsRow } from './utils';\nimport { textStyles } from '../styles';\n\nfunction MultipleChoice (props) {\n    const [value, setValue] = useState(null);\n    const {\n        classes,\n        component,\n        displayOptions,\n        id,\n        submissionData,\n        alignment,\n        disabled,\n        updateResponse\n    } = props;\n\n    const isRow = alignmentIsRow(alignment, displayOptions, component);\n\n    const handleChange = ({ target }) => {\n        // disabled is passed in EDITOR view only.\n        // If in EDITOR, use Hooks for component state, if in SUBMIT, use Redux\n        const f = disabled ? setValue : updateResponse;\n        f(target.value);\n    };\n\n    const marginSize = `${props.labelSize}Margin`;\n\n    return (\n            <FormControl\n                fullWidth\n                required={props.required}\n            >\n                <InputLabel\n                    className={classes[props.labelSize]}\n                    shrink\n                >\n                    {props.label || \"Field Label / Question\"}\n                </InputLabel>\n                <RadioGroup\n                    className={classes[marginSize]}\n                    aria-label={props.label}\n                    name={props.label}\n                    value={disabled ? value : submissionData[id].response} // In EDITOR use Hook, in SUBMIT use Redux\n                    onChange={handleChange}\n                    row={isRow}\n                >\n                    {props.options.map(option => (\n                        <FormControlLabel\n                            key={option.id}\n                            value={option.id}\n                            control={<Radio />}\n                            label={option.label}\n                            labelPlacement={props.optionLabelPosition}\n                        />\n                    ))}\n                </RadioGroup>\n                <FormHelperText>{props.helperText}</FormHelperText>\n            </FormControl>\n    );\n}\n\nexport default withStyles(textStyles)(MultipleChoice);\n","import React from 'react';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { textStyles } from './styles';\n\nfunction ParagraphField (props) {\n    const { classes, labelSize } = props;\n    const handleChange = e => props.updateResponse(e.target.value);\n\n    return (\n        <FormControl fullWidth>\n            <InputLabel\n                className={classes[labelSize]}\n                classes={{\n                    disabled: classes.overrideDisable\n                }}\n                disabled={props.disabled}\n                shrink\n                required={props.required}\n            >\n                {props.label || \"Label Text / Question\"}\n            </InputLabel>\n            <Input\n                classes={{\n                    disabled: classes.solidUnderline\n                }}\n                onChange={handleChange}\n                inputProps={{\n                    style: { cursor: 'pointer'}\n                }}\n                disabled={props.disabled}\n                fullWidth\n                multiline\n                rows={props.rows}\n                rowsMax={props.rowsMax}\n                placeholder={props.placeholder}\n            />\n            <FormHelperText>{props.helperText}</FormHelperText>\n        </FormControl>\n    );\n}\n\nexport default withStyles(textStyles)(ParagraphField);\n","import React, { useState } from 'react';\nimport { Checkbox, FormGroup, FormControlLabel, InputLabel, FormHelperText, FormControl } from '@material-ui/core';\nimport { textStyles } from './styles';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nfunction CheckboxField (props) {\n\n    const [value, setValue] = useState('');\n\n    const {\n        id,\n        classes,\n        labelSize,\n        options,\n        alignment,\n        optionLabelPosition,\n        disabled,\n        updateResponse,\n        submissionData\n    } = props;\n\n    const isRow = (alignment === 'vertical' ? false : true);\n\n    const handleChange = ({ target }) => {\n\n        const items = [...value];\n\n        if (target.checked) {\n            items.push(target.value);\n        } else {\n            let index = items.indexOf(target.value);\n            items.splice(index, 1);\n        }\n\n        if (!disabled) updateResponse(items);\n        setValue(items);\n    }\n\n    const marginSize = `${labelSize}Margin`;\n\n    return (\n        <FormControl\n            fullWidth\n            required={props.required}\n        >\n            <InputLabel\n                className={classes[labelSize]}\n                shrink\n            >\n                {props.label || \"Label Text / Question\"}\n            </InputLabel>\n            <FormGroup\n                className={classes[marginSize]}\n                aria-label={props.label}\n                name={props.label}\n                value={disabled ? value : submissionData[id].response}\n                onChange={handleChange}\n                row={isRow}\n            >\n\n                {options.map(option => (\n                    <FormControlLabel\n                        key={option.id}\n                        value={option.id}\n                        control={<Checkbox />}\n                        label={option.label}\n                        labelPlacement={optionLabelPosition}\n\n                    />\n\n                ))\n                }\n            </FormGroup>\n            <FormHelperText>{props.helperText}</FormHelperText>\n\n        </FormControl>\n    );\n}\n\nexport default withStyles(textStyles)(CheckboxField);\n","import React, { useState } from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport { textStyles } from './styles';\n\nfunction Dropdown (props) {\n    const [value, setValue] = useState('');\n    const { classes } = props;\n\n    const handleChange = ({ target }) => {\n        const { disabled } = props;\n        setValue(target.value);\n        if (!disabled) props.updateResponse(target.value);\n    };\n\n    return (\n        <React.Fragment>\n            <FormControl\n                component=\"fieldset\"\n                required={props.required}\n                fullWidth\n            >\n                <InputLabel\n                    className={classes[props.labelSize]}\n                    shrink\n                >\n                    {props.label || \"Field Label / Question\"}\n                </InputLabel>\n                <Select\n                    aria-label={props.label}\n                    name={props.label}\n                    value={value}\n                    onChange={handleChange}\n                >\n                    {props.options.map(option => (\n                        <MenuItem\n                            key={option.id}\n                            value={option.id}\n                            children={option.label}\n                        />\n                    ))}\n                </Select>\n            </FormControl>\n            <FormHelperText>{props.helperText}</FormHelperText>\n        </React.Fragment>\n    );\n}\n\nexport default withStyles(textStyles)(Dropdown);\n","import React from 'react';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { textStyles } from './styles';\n\nfunction TextField (props) {\n    const { classes, labelSize } = props;\n    const handleChange = e => props.updateResponse(e.target.value);\n\n    return (\n        <FormControl fullWidth>\n            <InputLabel\n                className={classes[labelSize]}\n                classes={{\n                    disabled: classes.overrideDisable\n                }}\n                disabled={props.disabled}\n                shrink\n                required={props.required}\n            >\n                {props.label || \"Label Text / Question\"}\n            </InputLabel>\n            <Input\n                classes={{\n                    disabled: classes.solidUnderline\n                }}\n                onChange={handleChange}\n                inputProps={{\n                    style: { cursor: 'pointer'}\n                }}\n                disabled={props.disabled}\n                fullWidth\n                placeholder={props.placeholder}\n            />\n            <FormHelperText>{props.helperText}</FormHelperText>\n        </FormControl>\n    );\n}\n\nexport default withStyles(textStyles)(TextField);\n\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\n\nfunction TitleDescription (props) {\n    return (\n        <div>\n            <Typography variant={props.titleSize} gutterBottom>\n                {props.title || \"Title Heading\"}\n            </Typography>\n            <Typography variant={props.descriptionSize} gutterBottom>\n                {props.description || \"Description sub-seading\"}\n            </Typography>\n        </div>\n    );\n}\n\nexport default TitleDescription;\n","import React from 'react';\n\nimport * as R from 'ramda';\nimport Grid from '@material-ui/core/Grid';\n\nimport MultipleChoice from './MultipleChoice';\nimport ParagraphField from './ParagraphField';\nimport Checkbox from './Checkbox';\nimport Dropdown from './Dropdown'\nimport TextField from './TextField';\nimport TitleDescription from './TitleDescription';\nimport { withStyles } from '@material-ui/core/styles';\nimport { gridStyles } from './styles';\n\nfunction FormField(props) {\n    const { fieldNames } = props.displayOptions;\n    const formFieldMap = {\n        [fieldNames.checkbox]: Checkbox,\n        [fieldNames.select]: Dropdown,\n        [fieldNames.multipleChoice]: MultipleChoice,\n        [fieldNames.paragraph]: ParagraphField,\n        [fieldNames.text]: TextField,\n        [fieldNames.title]: TitleDescription\n    };\n    const DisplayField = formFieldMap[props.component];\n    const displayFieldProps = R.omit(['updateFormResponse', 'classes'], props);\n\n    const updateResponse = (response) => {\n        const { id } = props;\n        return props.updateFormResponse({ id, response });\n    };\n\n    return (\n        <Grid container className={props.classes.gridContainer}>\n            <Grid item xs={12} sm={props.width} md={props.width}>\n                <DisplayField\n                    updateResponse={updateResponse}\n                    {...displayFieldProps}\n                />\n            </Grid>\n        </Grid>\n    );\n}\nexport default withStyles(gridStyles)(FormField);\n\n\n// updateFormField\n// displayOptions\n// state.formSubmit.formSubmissionData (MultipleChoice)"],"names":["alignmentIsRow","alignment","displayOptions","component","alignments","reduce","acc","val","value","horizontal","textStyles","theme","typography","pxToRem","palette","text","secondary","gridStyles","spacing","unit","MultipleChoice","props","useState","setValue","classes","id","submissionData","disabled","updateResponse","isRow","marginSize","labelSize","React","required","label","response","onChange","target","options","map","FormControlLabel","option","Radio","optionLabelPosition","helperText","withStyles","ParagraphField","fullWidth","overrideDisable","Input","solidUnderline","e","cursor","rows","rowsMax","placeholder","items","checked","push","index","indexOf","splice","Checkbox","CheckboxField","Dropdown","Fragment","MenuItem","TextField","variant","titleSize","gutterBottom","title","descriptionSize","description","FormField","fieldNames","DisplayField","checkbox","select","multipleChoice","paragraph","TitleDescription","displayFieldProps","R","container","className","gridContainer","item","xs","sm","width","md","updateFormResponse"],"mappings":"+gCAAaA,eAAiB,SAACC,EAAWC,EAAgBC,UAM/CF,IALgBC,EAAeC,GAA9BC,WACiBC,OAAO,SAACC,EAAKC,YAC9BA,EAAIC,OAASD,EAAIC,MACdF,GACR,IACwBG,YCNlBC,WAAa,kBAAU,IAC5B,QACQ,mBACEC,EAAMC,WAAWC,QAAQ,QAEnC,QACQ,mBACEF,EAAMC,WAAWC,QAAQ,QAEnC,QACQ,mBACEF,EAAMC,WAAWC,QAAQ,cAE7B,WACK,iBAEL,WACK,iBAEL,WACK,wBAEE,OACHF,EAAMG,QAAQC,KAAKC,wCAEjB,YACA,mBACW,uBAKlBC,WAAa,SAACN,SAAW,eACnB,SACF,CAAC,CAAsB,MAArBA,EAAMO,QAAQC,KAAmC,KAArBR,EAAMO,QAAQC,iBAC1C,o2BCtBnB,SAASC,eAAgBC,SACKC,eAAS,2BAA5Bd,OAAOe,OAEVC,EAQAH,EARAG,QACArB,EAOAkB,EAPAlB,UACAD,EAMAmB,EANAnB,eACAuB,EAKAJ,EALAI,GACAC,EAIAL,EAJAK,eACAzB,EAGAoB,EAHApB,UACA0B,EAEAN,EAFAM,SACAC,EACAP,EADAO,eAGEC,EAAQ7B,eAAeC,EAAWC,EAAgBC,GASlD2B,EAAgBT,EAAMU,0BAGpBC,gEAEcX,EAAMY,6DAGDT,EAAQH,EAAMU,wBAGlBG,OAAS,6EAGLV,EAAQM,gBACPT,EAAMa,WACZb,EAAMa,YACLP,EAAWnB,EAAQkB,EAAeD,GAAIU,SAC7CC,SAzBK,gBAAGC,IAAAA,QAGVV,EAAWJ,EAAWK,GAC9BS,EAAO7B,YAsBQqB,KAEES,QAAQC,IAAI,mBACfP,6BAACQ,sBACQC,EAAOhB,SACLgB,EAAOhB,WACLO,6BAACU,kBACHD,EAAOP,qBACEb,EAAMsB,4EAIXC,aAKvC,qBAAeC,kBAAWnC,WAAXmC,CAAuBzB,gBC7DtC,SAAS0B,eAAgBzB,OACbG,EAAuBH,EAAvBG,QAASO,EAAcV,EAAdU,iBAIbC,0CAAae,iEAEMvB,EAAQO,WACV,UACKP,EAAQwB,0BAEZ3B,EAAMM,4BAENN,EAAMY,YAETC,OAAS,sDAEnBe,eACY,UACKzB,EAAQ0B,yBAjBb,mBAAK7B,EAAMO,eAAeuB,EAAEd,OAAO7B,mBAoBhC,OACD,CAAE4C,OAAQ,qBAEX/B,EAAMM,wCAGVN,EAAMgC,aACHhC,EAAMiC,oBACFjC,EAAMkC,iEAEAX,aAKnC,qBAAeC,kBAAWnC,WAAXmC,CAAuBC,gDCvCRxB,eAAS,yBAA5Bd,OAAOe,OAGVE,EASAJ,EATAI,GACAD,EAQAH,EARAG,QACAO,EAOAV,EAPAU,UACAO,EAMAjB,EANAiB,QACArC,EAKAoB,EALApB,UACA0C,EAIAtB,EAJAsB,oBACAhB,EAGAN,EAHAM,SACAC,EAEAP,EAFAO,eACAF,EACAL,EADAK,eAGEG,EAAuB,aAAd5B,EAiBT6B,EAAgBC,kBAGlBC,qEAEcX,EAAMY,kEAGDT,EAAQO,gBAGZG,OAAS,gFAGLV,EAAQM,gBACPT,EAAMa,WACZb,EAAMa,YACLP,EAAWnB,EAAQkB,EAAeD,GAAIU,kBAhCpC,gBAAGE,IAAAA,OAEdmB,8BAAYhD,OAEd6B,EAAOoB,UACDC,KAAKrB,EAAO7B,WACf,KACCmD,EAAQH,EAAMI,QAAQvB,EAAO7B,SAC3BqD,OAAOF,EAAO,GAGnBhC,GAAUC,EAAe4B,KACrBA,QAsBI3B,KAGIU,IAAI,mBACTP,6BAACQ,2BACQC,EAAOhB,SACLgB,EAAOhB,WACLO,6BAAC8B,0BACHrB,EAAOP,qBACES,+DAOLC,aAMnC,eAAeC,kBAAWnC,WAAXmC,CAAuBkB,eCrEtC,SAASC,SAAU3C,SACWC,eAAS,yBAA5Bd,OAAOe,OACNC,EAAYH,EAAZG,eASJQ,4CAAOiC,kEAEW,oBACA5C,EAAMY,0EAIDT,EAAQH,EAAMU,wBAGlBG,OAAS,4EAGJb,EAAMa,WACZb,EAAMa,YACL1B,WAtBF,gBAAG6B,IAAAA,OACZV,EAAaN,EAAbM,WACCU,EAAO7B,OACXmB,GAAUN,EAAMO,eAAeS,EAAO7B,WAsBxB8B,QAAQC,IAAI,mBACfP,6BAACkC,cACQzB,EAAOhB,SACLgB,EAAOhB,YACJgB,EAAOP,+DAKVU,aAKnC,eAAeC,kBAAWnC,WAAXmC,CAAuBmB,UC5CtC,SAASG,UAAW9C,OACRG,EAAuBH,EAAvBG,QAASO,EAAcV,EAAdU,iBAIbC,0CAAae,iEAEMvB,EAAQO,WACV,UACKP,EAAQwB,0BAEZ3B,EAAMM,4BAENN,EAAMY,YAETC,OAAS,sDAEnBe,eACY,UACKzB,EAAQ0B,yBAjBb,mBAAK7B,EAAMO,eAAeuB,EAAEd,OAAO7B,mBAoBhC,OACD,CAAE4C,OAAQ,qBAEX/B,EAAMM,kCAEHN,EAAMkC,iEAEAX,aAKnC,gBAAeC,kBAAWnC,WAAXmC,CAAuBsB,+CCtC9BnC,iFACgBoC,QAAS/C,EAAMgD,UAAWC,mBAC3BC,OAAS,0DAERH,QAAS/C,EAAMmD,gBAAiBF,mBACjCG,aAAe,4BCGtC,SAASC,UAAUrD,SACPsD,EAAetD,EAAMnB,eAArByE,WASFC,uBAPDD,EAAWE,SAAWf,6BACtBa,EAAWG,OAASd,6BACpBW,EAAWI,eAAiB3D,mCAC5BuD,EAAWK,UAAYlC,mCACvB6B,EAAW5D,KAAOoD,8BAClBQ,EAAWJ,MAAQU,qBAEU5D,EAAMlB,WAClC+E,EAAoBC,OAAO,CAAC,qBAAsB,WAAY9D,UAQhEW,mCAAMoD,aAAUC,UAAWhE,EAAMG,QAAQ8D,kDAC/BC,QAAKC,GAAI,GAAIC,GAAIpE,EAAMqE,MAAOC,GAAItE,EAAMqE,oCACzCd,2BARU,SAACzC,OACZV,EAAOJ,EAAPI,UACDJ,EAAMuE,mBAAmB,CAAEnE,KAAIU,eAQtB+C,MAMxB,gBAAerC,kBAAW5B,WAAX4B,CAAuB6B"}